<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSTD-Backend</name>
    </assembly>
    <members>
        <member name="M:MSTD_Backend.Controllers.MstdController.GetSourcesAsync">
            <summary>
            Returns a list of torrrent sources for MSTD client app
            </summary>
            <returns></returns>
        </member>
        <member name="M:MSTD_Backend.Controllers.MstdController.GetTorrentsAsync(System.Collections.Generic.ICollection{System.String},MSTD_Backend.Enums.Sorting,MSTD_Backend.Enums.TorrentCategory,System.String,System.Int32)">
            <summary>
            Provides access to torrent search based on provided parameters
            </summary>
            <param name="urls">Urls to use for search. Invalid urls will not be used</param>
            <param name="sortOrder"></param>
            <param name="category">In which torrent category to search</param>
            <param name="searchValue">Text that is used to query torrents</param>
            <param name="page">Current search page. Must be greater than 0</param>
            <returns></returns>
        </member>
        <member name="M:MSTD_Backend.Controllers.MstdController.GetMagnetAsync(System.String,System.String,MSTD_Backend.Enums.TorrentSource)">
            <summary>
            Provides magnet links for individual torrent entries.
            </summary>
            <param name="baseUrl">Valid source url e.g. https://1337x.to/, https://tpb.party/ </param>
            <param name="torrentPath">Path to torrent after base url e.g. torrent/36312396/Perry.Mason.2020.S01E06.WEB.x264-PHOENiX[TGx]</param>
            <param name="source">One of the data providers like 1337x or ThePirateBay</param>
        </member>
        <member name="M:MSTD_Backend.Controllers.MstdController.GetDescriptionAsync(System.String,System.String,MSTD_Backend.Enums.TorrentSource)">
            <summary>
            Provides html description for individual torrent entries.
            </summary>
            <param name="baseUrl">Valid source url e.g. https://1337x.to/, https://tpb.party/ </param>
            <param name="torrentPath">Path to torrent after base url e.g. torrent/36312396/Perry.Mason.2020.S01E06.WEB.x264-PHOENiX[TGx]</param>
            <param name="source">One of the data providers like 1337x or ThePirateBay</param>
        </member>
        <member name="P:MSTD_Backend.Models.Sources.Site.Url">
            <summary>
            Url of the mirror or orgininal site
            </summary>
        </member>
        <member name="P:MSTD_Backend.Models.Sources.Site.State">
            <summary>
            Indicates whether Url can be used for queries
            </summary>
        </member>
        <member name="F:MSTD_Backend.Models.Sources.SiteState.Active">
            <summary>
            State indicates that queries can be performed
            </summary>
        </member>
        <member name="F:MSTD_Backend.Models.Sources.SiteState.Down">
            <summary>
            State indicates that queries CANNOT be performed
            </summary>
        </member>
        <member name="P:MSTD_Backend.Models.Sources.SourceDto.Name">
            <summary>
            UI friendly source name
            </summary>
        </member>
        <member name="P:MSTD_Backend.Models.Sources.SourceDto.UniqueId">
            <summary>
            Enum idenfying the source
            </summary>
        </member>
        <member name="P:MSTD_Backend.Models.Sources.SourceDto.Sites">
            <summary>
            A list of possible Urls and their availability for queries
            </summary>
        </member>
        <member name="M:MSTD_Backend.Services.SourceBase.BaseGetSourceStates(System.Func{System.Threading.Tasks.Task{MSTD_Backend.Data.TorrentQueryResult}})">
            <summary>
            Checks if each sources are active or not
            </summary>
            <typeparam name="T">Type of result the func yields</typeparam>
            <param name="func">Function that throws an exception if source is dead</param>
            <returns></returns>
        </member>
    </members>
</doc>
